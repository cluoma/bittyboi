percent = col_right,
change = col_right2,
stringsAsFactors = FALSE
) %>%
mutate(is_data_row = if_else(category == "", 1, 0),
category = if_else(str_trim(category) %in% c(""," "), NA_character_, category)) %>%
mutate(category = na_locf(category))
View(df_data)
41.33+7.39+10.61+10.99+12.03+17.64+0
date <- hws %>%
html_nodes("h1") %>%
html_text()
date <- str_extract(date, paste0("(", paste0(months, collapse="|"), ")", " [0-9]{4}"))[1]
months <- c("January","February","March","April",
"May","June","July","August",
"September","October","November","December")
date <- hws %>%
html_nodes("h1") %>%
html_text()
date <- str_extract(date, paste0("(", paste0(months, collapse="|"), ")", " [0-9]{4}"))[1]
date
df_data <- df_data %>%
mutate(date = date)
View(df_data)
get_data <- function(date) {
hws <- read_html(paste0("https://web.archive.org/web/", gsub("-","",date), "000000/https://store.steampowered.com/hwsurvey/"))
col_left <- hws %>%
html_nodes("div.stats_col_left") %>%
html_text()
col_mid <- hws %>%
html_nodes("div.stats_col_mid") %>%
html_text()
col_right <- hws %>%
html_nodes("div.stats_col_right") %>%
html_text()
col_right2 <- hws %>%
html_nodes("div.stats_col_right2") %>%
html_text()
df_data <- data.frame(
category = col_left,
name = col_mid,
percent = col_right,
change = col_right2,
stringsAsFactors = FALSE
) %>%
mutate(is_data_row = if_else(category == "", 1, 0),
category = if_else(str_trim(category) %in% c(""," "), NA_character_, category)) %>%
mutate(category = na_locf(category))
date <- hws %>%
html_nodes("h1") %>%
html_text()
date <- str_extract(date, paste0("(", paste0(months, collapse="|"), ")", " [0-9]{4}"))[1]
df_data <- df_data %>%
mutate(date = date)
}
ll <- get_date(Sys.Date())
ll <- get_data(Sys.Date())
View(ll)
seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month")
ll <- NULL
for (mydate in seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month")){
ll <- bind_rows(ll, get_data(mydate))
}
ll <- rbind(ll, get_data(mydate))
mydate
for (mydate in seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month")){
print(mydate)
#ll <- rbind(ll, get_data(mydate))
}
seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month")
for (mydate in as.character(seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month"))) {
print(mydate)
#ll <- rbind(ll, get_data(mydate))
}
#print(mydate)
ll <- rbind(ll, get_data(mydate))
ll <- NULL
for (mydate in as.character(seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month"))) {
#print(mydate)
ll <- rbind(ll, get_data(mydate))
}
View(ll)
?sleep
?Sys.sleep
ll <- NULL
for (mydate in as.character(seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month"))) {
#print(mydate)
ll <- rbind(ll, get_data(mydate))
Sys.wait(5)
}
rm(list = ls())
library(tidyverse)
library(rvest)
# Functions
na_locf <- function(x) {
x_len <- length(x)
if (x_len < 2)
stop("na_locf: vector not length 2 or more")
values <- x[!is.na(x)]
if (is.na(x[1])) values <- c(NA, values)
ind = 1
ind_val <- rep(1, x_len)
i <- 2
while (i <= length(x)) {
if (!is.na(x[i]))
ind <- ind+1
ind_val[i] <- ind
i <- i+1
}
return(values[ind_val])
}
months <- c("January","February","March","April",
"May","June","July","August",
"September","October","November","December")
get_data <- function(date) {
hws <- read_html(paste0("https://web.archive.org/web/", gsub("-","",date), "000000/https://store.steampowered.com/hwsurvey/"))
col_left <- hws %>%
html_nodes("div.stats_col_left") %>%
html_text()
col_mid <- hws %>%
html_nodes("div.stats_col_mid") %>%
html_text()
col_right <- hws %>%
html_nodes("div.stats_col_right") %>%
html_text()
col_right2 <- hws %>%
html_nodes("div.stats_col_right2") %>%
html_text()
df_data <- data.frame(
category = col_left,
name = col_mid,
percent = col_right,
change = col_right2,
stringsAsFactors = FALSE
) %>%
mutate(is_data_row = if_else(category == "", 1, 0),
category = if_else(str_trim(category) %in% c(""," "), NA_character_, category)) %>%
mutate(category = na_locf(category))
date <- hws %>%
html_nodes("h1") %>%
html_text()
date <- str_extract(date, paste0("(", paste0(months, collapse="|"), ")", " [0-9]{4}"))[1]
df_data <- df_data %>%
mutate(date = date)
}
ll <- NULL
for (mydate in as.character(seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month"))) {
#print(mydate)
ll <- rbind(ll, get_data(mydate))
Sys.wait(5)
}
hws <- read_html("https://web.archive.org/web/20180101000000/https://store.steampowered.com/hwsurvey/?platform=linux")
hws <- read_html("https://web.archive.org/web/20181001000000/https://store.steampowered.com/hwsurvey/?platform=linux")
?read_html
hws <- read_html("https://web.archive.org/web/20180101000000/https://store.steampowered.com/hwsurvey/?platform=linux")
ll <- NULL
for (mydate in as.character(seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month"))) {
#print(mydate)
ll <- rbind(ll, get_data(mydate))
Sys.wait(5)
}
ll <- NULL
for (mydate in as.character(seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month"))) {
#print(mydate)
ll <- rbind(ll, get_data(mydate))
Sys.sleep(5)
}
get_data <- function(date) {
hws <- GET(
paste0("https://web.archive.org/web/", gsub("-","",date), "000000/https://store.steampowered.com/hwsurvey/"),
timeout(30)
) %>%
read_html()
col_left <- hws %>%
html_nodes("div.stats_col_left") %>%
html_text()
col_mid <- hws %>%
html_nodes("div.stats_col_mid") %>%
html_text()
col_right <- hws %>%
html_nodes("div.stats_col_right") %>%
html_text()
col_right2 <- hws %>%
html_nodes("div.stats_col_right2") %>%
html_text()
df_data <- data.frame(
category = col_left,
name = col_mid,
percent = col_right,
change = col_right2,
stringsAsFactors = FALSE
) %>%
mutate(is_data_row = if_else(category == "", 1, 0),
category = if_else(str_trim(category) %in% c(""," "), NA_character_, category)) %>%
mutate(category = na_locf(category))
date <- hws %>%
html_nodes("h1") %>%
html_text()
date <- str_extract(date, paste0("(", paste0(months, collapse="|"), ")", " [0-9]{4}"))[1]
df_data <- df_data %>%
mutate(date = date)
}
ll <- NULL
for (mydate in as.character(seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month"))) {
#print(mydate)
ll <- rbind(ll, get_data(mydate))
Sys.sleep(5)
}
library(httr)
ll <- NULL
for (mydate in as.character(seq(as.Date("2018-01-01"), as.Date("2019-01-01"), by = "month"))) {
#print(mydate)
ll <- rbind(ll, get_data(mydate))
Sys.sleep(5)
}
unique(ll$date)
rm(list = ls())
library(tidyverse)
library(lubridate)
library(rvest)
library(httr)
# Global variables
months <- c("January","February","March","April",
"May","June","July","August",
"September","October","November","December")
# Functions
na_locf <- function(x) {
x_len <- length(x)
if (x_len < 2)
stop("na_locf: vector not length 2 or more")
values <- x[!is.na(x)]
if (is.na(x[1])) values <- c(NA, values)
ind = 1
ind_val <- rep(1, x_len)
i <- 2
while (i <= length(x)) {
if (!is.na(x[i]))
ind <- ind+1
ind_val[i] <- ind
i <- i+1
}
return(values[ind_val])
}
request_site <- function(url) {
attempts <- 3
attempt <- 0
html <- NULL
while (attempt < attempts) {
html <- tryCatch(
GET(url, timeout(30)),
error = function(e) {Sys.sleep(30)}
)
if (!is.null(html))
break;
attempt <- attempt + 1
}
if (is.null(html))
stop("failed after 3 attempsts")
return(html)
}
survey_html_to_dataframe <- function(hws_html) {
col_left <- hws_html %>%
html_nodes("div.stats_col_left") %>%
html_text()
col_mid <- hws_html %>%
html_nodes("div.stats_col_mid") %>%
html_text()
col_right <- hws_html %>%
html_nodes("div.stats_col_right") %>%
html_text()
col_right2 <- hws_html %>%
html_nodes("div.stats_col_right2") %>%
html_text()
df_data <- data.frame(
category = col_left,
name = str_trim(col_mid),
percent = str_trim(col_right),
change = str_trim(col_right2),
stringsAsFactors = FALSE
) %>%
mutate(is_data_row = if_else(category == "", 1L, 0L)) %>%
mutate(category = str_trim(category)) %>%
filter(category != "ITEM") %>%
mutate(
category = if_else(category == "", NA_character_, category),
name = if_else(name == "", NA_character_, name),
percent = if_else(percent == "", NA_character_, percent),
change = if_else(change == "", NA_character_, change)
) %>%
mutate(category = na_locf(category))
# mutate(percent = as.numeric(gsub("%","",percent)),
#        change = as.numeric(gsub("%","",change)))
# Extract the month date of the survey data
survey_date <- hws_html %>%
html_nodes("h1") %>%
html_text()
survey_date <- str_extract(survey_date, paste0("(", paste0(months, collapse="|"), ")", " [0-9]{4}"))[1] %>%
fast_strptime("%B %Y") %>%
as.Date() %>% as.character()
df_data <- df_data %>%
mutate(report_date = survey_date)
}
get_current_data <- function(platform = "combined") {
platforms = c("linux","mac","pc","combined")
if (!(platform %in% platforms))
stop(paste0("get_historic_data: supplied platform not one of ", paste0(platforms, collapse=", ")))
url <- paste0(
"https://store.steampowered.com/hwsurvey/",
case_when(
platform == "linux" ~ paste0("?platform=", "linux"),
platform == "mac" ~ paste0("?platform=",   "mac"),
platform == "pc" ~ paste0("?platform=",   "pc"),
TRUE ~ ""
)
)
hws <- request_site(url) %>%
read_html()
df_hws <- survey_html_to_dataframe(hws) %>%
mutate(platform = platform) %>%
mutate(scrape_date = date)
}
get_historic_data <- function(date, platform = "combined") {
platforms = c("linux","mac","pc","combined")
if (!(platform %in% platforms))
stop(paste0("get_historic_data: supplied platform not one of ", paste0(platforms, collapse=", ")))
url <- paste0(
"https://web.archive.org/web/",
gsub("-","",as.character(date)), "000000/https://store.steampowered.com/hwsurvey/",
case_when(
platform == "linux" ~ paste0("?platform=", "linux"),
platform == "mac" ~ paste0("?platform=",   "mac"),
platform == "pc" ~ paste0("?platform=",   "pc"),
TRUE ~ ""
)
)
hws <- request_site(url) %>%
read_html()
df_hws <- survey_html_to_dataframe(hws) %>%
mutate(platform = platform) %>%
mutate(scrape_date = date)
}
df_combined <- NULL
df_linux    <- NULL
df_mac      <- NULL
df_win      <- NULL
for (mydate in as.character(seq(as.Date("2016-01-01"), as.Date("2020-04-25"), by = "weeks"))) {
print(as.character(mydate))
df_combined <- rbind(df_combined, get_historic_data(mydate))
Sys.sleep(5)
df_linux    <- rbind(df_linux, get_historic_data(mydate, "linux"))
Sys.sleep(5)
df_mac      <- rbind(df_mac, get_historic_data(mydate, "mac"))
Sys.sleep(5)
df_win      <- rbind(df_win, get_historic_data(mydate, "pc"))
Sys.sleep(5)
}
save(list = c("df_combined","df_linux","df_mac","df_win"), file = "steam_survey_historic.rda")
install.packages("flexdashboard")
BiocManager::install("Rgraphviz")
install.packages("BiocManager")
BiocManager::install("Rgraphviz")
BiocManager::install("Rgraphviz")
30000*30
900000
30000*1.5
45000*30
library(jsonlite)
??jsonlite
?jsonlite::fromJSON
x = fromJSON("0.0.0.0")
x = fromJSON("http://0.0.0.0")
x
View(x)
0.93^((1.0225)^1000)
0.93*((1.0225)^1000)
install.packages("tidyverse")
install.packages("dplyr")
install.packages("dplyr")
install.packages("tidyr")
install.packages("readxl")
setwd("~/Documents/bittyboi")
open("test.txt")
fileConn<-file("switchstatement.txt")
writeLines(c("switch (next_byte)\n{"), fileConn)
for (i in 0:255)
{
writeLines(
c(paste0("case :","break;")),
fileConn
)
}
writeLines(c("}"), fileConn)
close(fileConn)
?writeLines
fileConn<-file("switchstatement.txt")
cat("switch (next_byte)\n{", file=fileConn, append = FALSE)
for (i in 0:255)
{
cat(
paste0("case : "),
"break;",
fileConn,
append = TRUE
)
}
cat("}", file=fileConn, append = TRUE)
close(fileConn)
fileConn<-file("switchstatement.txt")
cat("switch (next_byte)\n{", file=fileConn, append = FALSE)
for (i in 0:255)
{
cat(
paste0("case : "),
"break;",
fileConn,
append = TRUE
)
}
for (i in 0:255)
{
cat(
c(paste0("case : "),
"break;"),
fileConn,
append = TRUE
)
}
fileConn<-file("switchstatement.txt")
cat("switch (next_byte)\n{", file=fileConn, append = FALSE)
for (i in 0:255)
{
cat(
paste0("case : \nbreak;"),
fileConn,
append = TRUE
)
}
cat("}", file=fileConn, append = TRUE)
close(fileConn)
fileConn<-file("switchstatement.txt")
cat("switch (next_byte)\n{", file=fileConn, append = FALSE)
for (i in 0:255)
{
cat(
paste0("case : \nbreak;\n"),
file = fileConn,
append = TRUE
)
}
cat("}", file=fileConn, append = TRUE)
close(fileConn)
fileConn<-file("switchstatement.txt")
cat("switch (next_byte)\n{", file=fileConn, append = FALSE)
for (i in 0:255)
{
cat(
paste0("case : \nbreak;\n"),
file = fileConn,
append = TRUE
)
}
# cat("}", file=fileConn, append = TRUE)
close(fileConn)
?cat
?file
fileConn <- file("switchstatement.txt", open = "wt")
cat("switch (next_byte)\n{", file=fileConn, append = FALSE)
close(fileConn)
fileConn <- file("switchstatement.txt", open = "at")
for (i in 0:255)
{
cat(
paste0("case : \nbreak;\n"),
file = fileConn,
append = TRUE
)
}
cat("}", file=fileConn, append = TRUE)
close(fileConn)
printf("0x%04X", 100)
?printf
?sprintf
sprintf("0x%04X", 100)
sprintf("0x%02X", 100)
fileConn <- file("switchstatement.txt", open = "wt")
cat("switch (next_byte)\n{\n", file=fileConn, append = FALSE)
close(fileConn)
fileConn <- file("switchstatement.txt", open = "at")
for (i in 0:255)
{
cat(
paste0("case : ", sprintf("0x%02X", i), "\nbreak;\n"),
file = fileConn,
append = TRUE
)
}
cat("}", file=fileConn, append = TRUE)
close(fileConn)
con <- file("switchstatement.txt", open = "wt")
cat("switch (next_byte)\n{\n", file = con, append = FALSE)
close(con)
con <- file("switchstatement.txt", open = "at")
for (i in 0:255)
{
cat(
paste0("case ", sprintf("0x%02X", i), ":\nbreak;\n"),
file = con,
append = TRUE
)
}
cat("}", file = con, append = TRUE)
close(con)
